<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title type="text">Pages</title>
	<subtitle type="text">blog with various projects and articles about computer-related things</subtitle>
	<updated>2023-02-14T00:00:00Z</updated>
	<link rel="alternate" type="text/html" href="https://www.seignard.fr" />
	<id>https://www.seignard.fr/atom.xml</id>
	<link rel="self" type="application/atom+xml" href="https://www.seignard.fr/atom.xml" />
<entry>
	<title type="text">Tailscale ACL restrictions </title>
	<link rel="alternate" type="text/html" href="https://www.seignard.fr/tailscale.html" />
	<id>https://www.seignard.fr/tailscale.html</id>
	<updated>2023-02-14T00:00:00Z</updated>
	<published>2023-01-20T00:00:00Z</published>
	<author>
		<name>antoine</name>
		<uri>https://www.seignard.fr</uri>
	</author>
	<summary type="text">separate access to your environement using tailscale ACL&#39;s</summary>
	<content type="html"><![CDATA[<h1>Tailscale ACL restrictions </h1>
	<p><strong>Last modification on </strong> <time>2023-02-14</time></p>
	<h1>Restrict access on the infrastructure using tailscale ACL's</h1>
<h2>Introduction</h2>
<p>Tailscale is a great mesh vpn with minimal setup to be able to join a private
network on top of internet.</p>
<p>One of the great feature is to use a <strong>relay[1]</strong> to forward your traffic from
your laptop to your Cloud infrastructure and only using private IP
addresses.</p>
<p>One of the drawback of this feature is that anyone on the mesh can access your
infrastructure.</p>
<p>Godd news is that we can setup <strong>ACL[2]</strong> to restrict access to people.</p>
<h2>Setup ACL's</h2>
<h3>Initial scope</h3>
<p>Let's start with 2 teams: 
<ul>
<li>Developers folks</li>
<li>Platform guys</li>
</ul>
</p>
<p>The Platform guys need to have access all part of the infrastructure.
The Developers folks need only to read some data on staging Databases.</p>
<p>Let's assume that Staging Databases are located on a dedicated subnet:
<code>10.0.42.0/24</code></p>
<h3>Use tags and acl</h3>
<p>There is a file defining the global access policy to tailscale, it's a big JSON
file.</p>
<p>the simplest way to implement our scope policy is to define 2 groups : </p>
<ul>
<li>platform</li>
<li>developer</li>
</ul>
<pre><code>&quot;groups&quot;: {
		&quot;group:platform&quot;: [
			&quot;jean@corp.com&quot;,
			&quot;paulette@corp.com&quot;,
		],
		&quot;group:developer&quot;: [
			&quot;pierre@corp.com&quot;,
			&quot;rachel@corp.com&quot;,
		],
		&quot;group:datanalyst&quot;: [
			&quot;quentin@corp.com&quot;,
			&quot;david@corp.com&quot;,
		],
	},
</code></pre>
<h3>Define the proper ACL</h3>
<p>At this stage, we have 2 user groups then we need to define acl's blocks to
restrict access.</p>
<pre><code>// Access control lists.
&quot;acls&quot;: [
	// Match absolutely everything.
	// Comment this section out if you want to define specific restrictions.
	// Full access
	{&quot;action&quot;: &quot;accept&quot;, &quot;src&quot;: [&quot;group:platform&quot;], &quot;dst&quot;: [&quot;*:*&quot;]},
	// Access to the websites
	{&quot;action&quot;: &quot;accept&quot;, &quot;src&quot;: [&quot;group:developer&quot;], &quot;dst&quot;: [&quot;*:80&quot;]},
	// Access to the database 
	{&quot;action&quot;: &quot;accept&quot;, &quot;src&quot;: [&quot;group:datanalyst&quot;], &quot;dst&quot;: [&quot;*:5432&quot;]},
],
</code></pre>
<h2>References</h2>
<p>[1]: <a href="https://tailscale.com/kb/1021/install-aws/">https://tailscale.com/kb/1021/install-aws/</a></p>
<p>[2]: <a href="https://tailscale.com/kb/1068/acl-tags/">https://tailscale.com/kb/1068/acl-tags/</a></p>
]]></content>
</entry>
<entry>
	<title type="text">Logging to Datadog from Nomad workload</title>
	<link rel="alternate" type="text/html" href="https://www.seignard.fr/nomad_logging.html" />
	<id>https://www.seignard.fr/nomad_logging.html</id>
	<updated>2023-01-13T00:00:00Z</updated>
	<published>2023-01-13T00:00:00Z</published>
	<author>
		<name>antoine</name>
		<uri>https://www.seignard.fr</uri>
	</author>
	<summary type="text">How to stream logs from a Nomad workload</summary>
	<content type="html"><![CDATA[<h1>Logging to Datadog from Nomad workload</h1>
	<p><strong>Last modification on </strong> <time>2023-01-13</time></p>
	<h1>Ship logs from Nomad workload to Datadog</h1>
<h2>Context</h2>
<p>One common task to achieve during the build of a platform is to
have logs ship to a central place where they can be searchable.</p>
<p>In modern architectures, most of the workloads are isolated from each others, so this is 
not an easy task to send application logs for several reasons : 
<ul>
<li>Containers are by design isolated</li>
<li>On a Nomad cluster, you can run others tasks such as <strong>java</strong>, <strong>firecracker</strong> VMs, and so.</li>
</ul>
</p>
<h2>Solution</h2>
<p>There are several ways to ship log from a Nomad workload to Datadog.
I will highlight only one, a <strong>sidecar task</strong>.</p>
<p>In Nomad, task groups are sharing a common file system for each allocations running.
have logs ship to a central place where they can be searchable.</p>
<p>Official documentation can be found</p>
<p><a href="https://developer.hashicorp.com/nomad/docs/concepts/filesystem#filesystem">here</a>.
<img src="datadog_shipping_with_a_sidecar_task.png" alt="datadog in nomad
cluster" /></p>
<p>The application need to be configured to log in the allocation storage.</p>
<p>This is an example of sending logs from an application : </p>
<pre><code>config :logger, :error_log, 
	path: &quot;/alloc/data/info.log&quot;,
	level: :debug
</code></pre>
<h2>References</h2>
<blockquote><ul>
<li><a href="https://discuss.hashicorp.com/t/logging-collection-in-docker-and-let-datadog-agent-to-collect-to-display-in-datadog/44482">nomad community discussion</a></li>
<li><a href="https://developer.hashicorp.com/nomad/docs/concepts/filesystem#filesystem">filesystem official documentation</a></li>
</ul>
</blockquote>
]]></content>
</entry>
<entry>
	<title type="text">Composite actions on Github</title>
	<link rel="alternate" type="text/html" href="https://www.seignard.fr/composite.html" />
	<id>https://www.seignard.fr/composite.html</id>
	<updated>2023-01-18T00:00:00Z</updated>
	<published>2023-01-18T00:00:00Z</published>
	<author>
		<name>antoine</name>
		<uri>https://www.seignard.fr</uri>
	</author>
	<summary type="text">reuse steps on github actions and centralize them</summary>
	<content type="html"><![CDATA[<h1>Composite actions on Github</h1>
	<p><strong>Last modification on </strong> <time>2023-01-18</time></p>
	<h1>Composite Actions on Github</h1>
<h2>Introduction</h2>
<p>Most of the time when using workflows some steps are duplicated on other
worflows.</p>
<p>When the time come to update those steps, we need to take care about all
different aerea where steps has been duplicated.</p>
<p>It would be more convinient to have a common place where a single update can
rule them all.</p>
<h2>How can we organize this central place ?</h2>
<p>Inside a github organisation, when you have multiple repositories and you want
to share actions between all those repositories.</p>
<ul>
<li>Create a central repository</li>
<li>Clone the repository</li>
<li>Create the expected layout</li>
</ul>
<p><code>mkdir -p .github/workflows/actions</code></p>
<ul>
<li>Move in this directory</li>
</ul>
<p><code>cd .github/workflows/actions</code></p>
<p>For Each composite actions you want to create : </p>
<ul>
<li>Create a directory (this will be the name of the action)</li>
</ul>
<p><code>mkdir mycoolaction</code></p>
<ul>
<li>Create an action.yml file inside this directory.</li>
</ul>
]]></content>
</entry>
</feed>
